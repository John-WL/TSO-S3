C51 COMPILER V9.53.0.0   TYPECONVERSION                                                    12/03/2019 18:09:14 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TYPECONVERSION
OBJECT MODULE PLACED IN TypeConversion.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TypeConversion.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(
                    -2)

line level    source

   1          /*****************************Type conversion handling*******************************/
   2          /*
   3              Nom du fichier: TypeConversion.c
   4              Auteur : John-William Lebel
   5          
   6              Date de création: 2019-11-29
   7          
   8              Fonction(s) utile(s) pour convertir certains types en d'autres
   9          
  10          
  11          *****************************************************************************************/
  12          
  13          //-------------- header files  -----------------
  14          #include "ds89c450.h"       // Définition des bits et des registres du microcontrôleur
  15          #include "TypeConversion.h"
  16          
  17          // Prédéclarations privées
  18          unsigned char halfCharToHexaDecimal(unsigned char* numberToEvaluate);
  19          
  20          
  21          // *************************************************************************************************
  22          unsigned char unsignedCharToHexaDecimal(unsigned char* numberToEvaluate, unsigned char digitIndex)
  23          //
  24          //  Auteur: John-William Lebel
  25          //
  26          //  Description: Convert an unsigned char variable into an ascii encoded hexadecimal value. If digitIndex 
             -== 0,
  27          //                then the msb is returned (4 bits). If digitIndex == 1, then the lsb is returned (4 bits too).
  28          //                If digitIndex == anything else, then the character ' ' is returned.
  29          //  Paramètres d'entrées  : numberToEvaluate, digitIndex
  30          //  Paramètres de sortie  : an ascii encoded hexadecimal value
  31          //  Notes                 : Aucune
  32          //
  33          // *************************************************************************************************
  34          {
  35   1          unsigned char result;
  36   1        
  37   1          if(digitIndex == 0)   // need to change the 0 for the "define", and include the right file
  38   1          {
  39   2            result = *numberToEvaluate >> 4;
  40   2          }
  41   1          else if(digitIndex == 1)
  42   1          {
  43   2            result = (*numberToEvaluate) & 0x0F;
  44   2          }
  45   1          else
  46   1          {
  47   2              result = ' ';
  48   2          }
  49   1          result = halfCharToHexaDecimal(&result);
  50   1          
  51   1          return result;
  52   1      }
  53          
C51 COMPILER V9.53.0.0   TYPECONVERSION                                                    12/03/2019 18:09:14 PAGE 2   

  54          // *************************************************************************************************
  55          unsigned char unsignedCharToDecimal(unsigned char* numberToEvaluate, unsigned char digitIndex)
  56          //
  57          //  Auteur: John-William Lebel
  58          //
  59          //  Description: Convert an unsigned char variable into an ascii encoded decimal value. If digitIndex == 0
             -,
  60          //                then the 1st digit is returned. If digitIndex == 1, then the 2nd digit is returned.
  61          //                If digitIndex == 2, the 3rd digit is returned. If digitIndex == anything else, then
  62          //                the character ' ' is returned.
  63          //  Paramètres d'entrées  : numberToEvaluate, digitIndex
  64          //  Paramètres de sortie  : an ascii encoded decimal value
  65          //  Notes                 : Aucune
  66          //
  67          // *************************************************************************************************
  68          {
  69   1          unsigned char result;
  70   1        
  71   1          if(digitIndex == 0)
  72   1          {
  73   2            result = '0' + (*numberToEvaluate / 100);
  74   2          }
  75   1          else if(digitIndex == 1)
  76   1          {
  77   2            result = '0' + (*numberToEvaluate / 10);
  78   2          }
  79   1          else if(digitIndex == 2)
  80   1          {
  81   2            result = '0' + (*numberToEvaluate % 10);
  82   2          }
  83   1          else
  84   1          {
  85   2              result = ' ';
  86   2          }
  87   1          
  88   1          return result;
  89   1      }
  90          
  91          // *************************************************************************************************
  92          unsigned char* weightTypeToString(unsigned char* weightTypeIndex)
  93          //
  94          //  Auteur: John-William Lebel
  95          //
  96          //  Description: Convert an unsigned char variable that represents the type of weight (wheither it's red,
  97          //                green, or blue), which can be seen as an index, into its corresponding name in the string format
  98          //  Paramètres d'entrées  : weightTypeIndex
  99          //  Paramètres de sortie  : the name of the weight type
 100          //  Notes                 : Aucune
 101          //
 102          // *************************************************************************************************
 103          {
 104   1          unsigned char* result;
 105   1          
 106   1          if(*weightTypeIndex == BLUE_WEIGHT)
 107   1          {
 108   2              result = "Bleu ";
 109   2          }
 110   1          else if(*weightTypeIndex == GREEN_WEIGHT)
 111   1          {
 112   2              result = "Vert ";
 113   2          }
 114   1          else if(*weightTypeIndex == RED_WEIGHT)
C51 COMPILER V9.53.0.0   TYPECONVERSION                                                    12/03/2019 18:09:14 PAGE 3   

 115   1          {
 116   2              result = "Rouge";
 117   2          }
 118   1          else
 119   1          {
 120   2              result = "Aucun";
 121   2          }
 122   1          
 123   1          return result;
 124   1      }
 125          
 126          // *************************************************************************************************
 127          unsigned char halfCharToHexaDecimal(unsigned char* numberToEvaluate)
 128          //
 129          //  Auteur: John-William Lebel
 130          //
 131          //  Description: Convert an unsigned char variable smaller than 0x10 into an hexadecimal value in ascii.
 132          //  Paramètres d'entrées  : numberToEvaluate
 133          //  Paramètres de sortie  : an ascii encoded hexadecimal value
 134          //  Notes                 : Aucune
 135          //
 136          // *************************************************************************************************
 137          {
 138   1          unsigned char result;
 139   1          
 140   1          if(*numberToEvaluate <= 9)
 141   1          {
 142   2            result = '0' + *numberToEvaluate;
 143   2          }
 144   1          else if(*numberToEvaluate <= 0x0F)
 145   1          {
 146   2            result = 'A' + (*numberToEvaluate - 0x0A);
 147   2          }
 148   1          else
 149   1          {
 150   2              result = ' ';
 151   2          }
 152   1          
 153   1          return result;
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
