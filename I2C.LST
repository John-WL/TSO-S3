C51 COMPILER V9.53.0.0   I2C                                                               12/05/2019 16:48:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**************************************************************************************************
   2          Nom du fichier : I2C.c
   3          Auteur : Hugo Pellerin                 
   4          Date de création : 30-08-2019
   5          Code et definition pour les fonctions de traitement du I2C.
   6          ***************************************************************************************************/
   7            
   8          #include "_DS89C450Modifie.h"       // Définition des bits et des registres du microcontrôleur
   9          #include "_DeclarationGenerale.h"
  10          #include "I2C.h"
  11          
  12          void vInitPortSerie_0(void);
  13          void vDelaiI2C(UI uiTemps);
  14          
  15          void vStartBitI2C()
  16          { 
  17   1        SDA = 1;
  18   1        SCL = 1;
  19   1        
  20   1        vDelaiI2C(2);
  21   1        SDA = 0;
  22   1        vDelaiI2C(2);
  23   1        SCL = 0;
  24   1        vDelaiI2C(2);
  25   1      }
  26          
  27          void vStopBitI2C()
  28          {
  29   1        SDA = 0;
  30   1        SCL = 0;
  31   1        
  32   1        vDelaiI2C(2);
  33   1        SCL = 1;  
  34   1        vDelaiI2C(2);
  35   1        SDA = 1;
  36   1        vDelaiI2C(2);
  37   1      }
  38          
  39          void vEcrire1BitI2C(UC ucBitASortir)
  40          {
  41   1        if(ucBitASortir)
  42   1          SDA = 1;
  43   1        else
  44   1          SDA = 0;
  45   1        
  46   1        vDelaiI2C(2);
  47   1        SCL = 1;
  48   1        vDelaiI2C(2);
  49   1        SCL = 0;
  50   1        vDelaiI2C(2);
  51   1      }
  52          
  53          UC ucLire1BitI2C()
  54          {
  55   1        UC ucBitLu = 1;
C51 COMPILER V9.53.0.0   I2C                                                               12/05/2019 16:48:52 PAGE 2   

  56   1        
  57   1        SDA = 1;
  58   1        vDelaiI2C(2);
  59   1        SCL = 1;
  60   1        vDelaiI2C(2);
  61   1          
  62   1        if(!SDA)
  63   1          ucBitLu = 0;
  64   1        
  65   1        SCL = 0;
  66   1        vDelaiI2C(2);
  67   1          
  68   1        return ucBitLu;  
  69   1      }
  70          
  71          unsigned char ucEcrire8BitsI2C(UC ucTxData)
  72          {
  73   1        int i;
  74   1        for(i = 0; i < 8; i++)
  75   1        {
  76   2          if((ucTxData & 0x80) == 0x80) //7e bit a 1?
  77   2          {
  78   3            vEcrire1BitI2C(1);
  79   3          }
  80   2          else
  81   2          {
  82   3            vEcrire1BitI2C(0);
  83   3          }
  84   2          ucTxData = ucTxData << 1;
  85   2        }
  86   1        SCL = 1;
  87   1        return ucLire1BitI2C();
  88   1      }
  89          
  90          UC ucLire8BitsI2C(UC ucAck)
  91          {
  92   1        UC ucRecu = 0x00;
  93   1        int i;
  94   1        for(i=0; i<8; i++)
  95   1        {
  96   2          ucRecu = ucRecu << 1;
  97   2          if(ucLire1BitI2C())
  98   2          {
  99   3            ucRecu++;
 100   3          }
 101   2        }
 102   1        vEcrire1BitI2C(ucAck);
 103   1        return ucRecu;
 104   1      }
 105            
 106          UC ucLireMemI2C(UI uiAdr)
 107          {
 108   1        UC ucVal = 0x00;
 109   1        
 110   1        vStartBitI2C();
 111   1        
 112   1        ucEcrire8BitsI2C(0xA0);
 113   1        
 114   1        ucVal = uiAdr >> 8;
 115   1        ucEcrire8BitsI2C(ucVal);
 116   1        
 117   1        ucVal = uiAdr;
C51 COMPILER V9.53.0.0   I2C                                                               12/05/2019 16:48:52 PAGE 3   

 118   1        ucEcrire8BitsI2C(ucVal);
 119   1        
 120   1        vStartBitI2C();
 121   1        
 122   1        ucEcrire8BitsI2C(0xA1);
 123   1        ucVal = ucLire8BitsI2C(1);
 124   1        
 125   1        vStopBitI2C();
 126   1        
 127   1        return ucVal;
 128   1      }
 129          
 130          void vEcrireMemI2C(UC ucData, UI uiAdr)
 131          {
 132   1        
 133   1        UC ucVal = 0x00;
 134   1        
 135   1        vStartBitI2C();
 136   1        
 137   1        ucEcrire8BitsI2C(0xA0);
 138   1        
 139   1        ucVal = uiAdr >> 8;
 140   1        ucEcrire8BitsI2C(ucVal);
 141   1        
 142   1        ucVal = uiAdr;
 143   1        ucEcrire8BitsI2C(ucVal);
 144   1        
 145   1        ucEcrire8BitsI2C(ucData);
 146   1        
 147   1        vStopBitI2C();
 148   1        
 149   1        vDelaiI2C(4000);
 150   1        
 151   1      }
 152          // *************************************************************************************************
 153          //  Auteur: Hugo Pellerin
 154          //  Date de creation :  30-08-2019
 155          //
 156          //  Description: Bloque le programme pendant un temps donnee
 157          //  Parametres d'entrees : uiTemps
 158          //  Parametres de sortie : Aucun
 159          //  Notes            : Aucune
 160          //
 161          void vDelaiI2C(UI uiTemps)
 162          {
 163   1        int i;
 164   1        for(i = 0; i < uiTemps; i++){}
 165   1      }
 166          // *************************************************************************************************


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    392    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
