C51 COMPILER V9.53.0.0   I2C                                                               12/09/2019 15:01:05 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**************************************************************************************************
   2            Nom du fichier : I2C.c
   3              
   4              Auteur: Hugo Pellerin
   5              Modifications:
   6                - John-William Lebel (2019-12-06) => ajout de commentaires
   7              Date de création : 30-08-2019
   8              Code et definition pour les fonctions de traitement du I2C.
   9          ***************************************************************************************************/
  10            
  11          #include "_DS89C450Modifie.h"       // définition des bits et des registres du microcontrôleur
  12          #include "_DeclarationGenerale.h"   // déclaration pour coder de façon peu conventionnelle
  13          #include "I2C.h"                    // fichier .h associé à celui-ci
  14          
  15          void vInitPortSerie_0(void);
  16          void vDelaiI2C(UI uiTemps);
  17          
  18          void vStartBitI2C()
  19          
  20          { 
  21   1        SDA = 1;
  22   1        SCL = 1;
  23   1        
  24   1        vDelaiI2C(2);
  25   1        SDA = 0;
  26   1        vDelaiI2C(2);
  27   1        SCL = 0;
  28   1        vDelaiI2C(2);
  29   1      }
  30          
  31          void vStopBitI2C()
  32          {
  33   1        SDA = 0;
  34   1        SCL = 0;
  35   1        
  36   1        vDelaiI2C(2);
  37   1        SCL = 1;  
  38   1        vDelaiI2C(2);
  39   1        SDA = 1;
  40   1        vDelaiI2C(2);
  41   1      }
  42          
  43          void vEcrire1BitI2C(UC ucBitASortir)
  44          {
  45   1        if(ucBitASortir)
  46   1          SDA = 1;
  47   1        else
  48   1          SDA = 0;
  49   1        
  50   1        vDelaiI2C(2);
  51   1        SCL = 1;
  52   1        vDelaiI2C(2);
  53   1        SCL = 0;
  54   1        vDelaiI2C(2);
  55   1      }
C51 COMPILER V9.53.0.0   I2C                                                               12/09/2019 15:01:05 PAGE 2   

  56          
  57          UC ucLire1BitI2C()
  58          {
  59   1        UC ucBitLu = 1;
  60   1        
  61   1        SDA = 1;
  62   1        vDelaiI2C(2);
  63   1        SCL = 1;
  64   1        vDelaiI2C(2);
  65   1          
  66   1        if(!SDA)
  67   1          ucBitLu = 0;
  68   1        
  69   1        SCL = 0;
  70   1        vDelaiI2C(2);
  71   1          
  72   1        return ucBitLu;  
  73   1      }
  74          
  75          unsigned char ucEcrire8BitsI2C(UC ucTxData)
  76          {
  77   1        int i;
  78   1        for(i = 0; i < 8; i++)
  79   1        {
  80   2          if((ucTxData & 0x80) == 0x80) //7e bit a 1?
  81   2          {
  82   3            vEcrire1BitI2C(1);
  83   3          }
  84   2          else
  85   2          {
  86   3            vEcrire1BitI2C(0);
  87   3          }
  88   2          ucTxData = ucTxData << 1;
  89   2        }
  90   1        SCL = 1;
  91   1        return ucLire1BitI2C();
  92   1      }
  93          
  94          UC ucLire8BitsI2C(UC ucAck)
  95          {
  96   1        UC ucRecu = 0x00;
  97   1        int i;
  98   1        for(i=0; i<8; i++)
  99   1        {
 100   2          ucRecu = ucRecu << 1;
 101   2          if(ucLire1BitI2C())
 102   2          {
 103   3            ucRecu++;
 104   3          }
 105   2        }
 106   1        vEcrire1BitI2C(ucAck);
 107   1        return ucRecu;
 108   1      }
 109            
 110          UC ucLireMemI2C(UI uiAdr)
 111          {
 112   1        UC ucVal = 0x00;
 113   1        
 114   1        vStartBitI2C();
 115   1        
 116   1        ucEcrire8BitsI2C(0xA0);
 117   1        
C51 COMPILER V9.53.0.0   I2C                                                               12/09/2019 15:01:05 PAGE 3   

 118   1        ucVal = uiAdr >> 8;
 119   1        ucEcrire8BitsI2C(ucVal);
 120   1        
 121   1        ucVal = uiAdr;
 122   1        ucEcrire8BitsI2C(ucVal);
 123   1        
 124   1        vStartBitI2C();
 125   1        
 126   1        ucEcrire8BitsI2C(0xA1);
 127   1        ucVal = ucLire8BitsI2C(1);
 128   1        
 129   1        vStopBitI2C();
 130   1        
 131   1        return ucVal;
 132   1      }
 133          
 134          // *************************************************************************************************
 135          //  Auteur: Hugo Pellerin
 136          //  Date de creation :  30-08-2019
 137          //
 138          //  Description: Bloque le programme pendant un temps donnee
 139          //  Parametres d'entrees : uiTemps
 140          //  Parametres de sortie : Aucun
 141          //  Notes            : Aucune
 142          //
 143          void vDelaiI2C(UI uiTemps)
 144          {
 145   1        int i;
 146   1        for(i = 0; i < uiTemps; i++){}
 147   1      }
 148          // *************************************************************************************************


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    336    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
