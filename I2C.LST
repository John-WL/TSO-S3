C51 COMPILER V9.53.0.0   I2C                                                               11/29/2019 21:50:55 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**************************************************************************************************
   2          Nom du fichier : I2C.c
   3          Auteur : Stéphane Deschênes                  
   4          Date de création : 01-09-2019
   5          Version 1.0
   6             
   7            Contient les fonctions I2C
   8                
   9          ***************************************************************************************************/
  10          
  11          // *************************************************************************************************
  12          //  INCLUDES
  13          // *************************************************************************************************  
  14          #include "ds89c450.h"       // Définition des bits et des registres du microcontrôleur
  15          #include "I2C.h"
  16          #include <stdio.h>          // Prototype de declarations des fonctions I/O
  17          
  18          
  19          // *************************************************************************************************
  20          //  CONSTANTES
  21          // *************************************************************************************************
  22          
  23          /* VIDE */
  24          
  25          // *************************************************************************************************
  26          //  FONCTIONS LOCALES
  27          // *************************************************************************************************
  28          void vI2CDelai(unsigned int tmp);
  29          void vEcrire1BitI2C(unsigned char ucBitOut);
  30          unsigned char ucLire1BitI2C(void);
  31          
  32          
  33          // *************************************************************************************************
  34          //  STRUCTURES ET UNIONS
  35          // *************************************************************************************************
  36          /* VIDE */
  37          
  38          // *************************************************************************************************
  39          // VARIABLES GLOBALES
  40          // *************************************************************************************************
  41          /* VIDE */
  42          
  43          // *************************************************************************************************
  44          // VARIABLES LOCALES
  45          // *************************************************************************************************
  46          /* VIDE */
  47          
  48          
  49          
  50          //********************************vDelaiI2C*****************************
  51          //  Nom de la fonction : vDelaiI2C
  52          //  Auteur : Alain Champagne    
  53          //       Date de création : 30-05-2007              
  54          //  Description :   Routine de délai pour la communication I2C. 
  55          //              
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2019 21:50:55 PAGE 2   

  56          //  Fonctions appelées :  Aucune    
  57          //  Paramètres d'entrée :   Aucun   
  58          //  Paramètres de sortie :  Aucun   
  59          //  Variables utilisées :   Aucune
  60          //  Equate :    Aucun 
  61          //  #Define :     Aucun 
  62          //            
  63          //**********************************************************************
  64          void vI2CDelai (unsigned int tmp)
  65          {   
  66   1        while (tmp>0)
  67   1        {
  68   2          tmp--;
  69   2        }   
  70   1      }
  71          
  72          
  73          //*********************************************************************
  74          void vI2CStartBit(void)     
  75          //  Auteur : Alain Champagne    
  76          //  Date de création : 30-05-2007             
  77          //  Description :   Fonction qui effectue un start bit avec les lignes SDA et SCL 
  78          //    
  79          //  Paramètres d'entrée :   Aucun   
  80          //  Paramètres de sortie :  Aucun   
  81          //  Notes: Passage de 1 à 0 de la ligne SDA durant un niveau haut de SCL
  82          //**********************************************************************
  83          {
  84   1        SDA = 1;            
  85   1        vI2CDelai (dDelai); 
  86   1        SCL = 1;            
  87   1        vI2CDelai (dDelai);
  88   1        SDA = 0;            
  89   1        vI2CDelai (dDelai); 
  90   1        SCL = 0;            
  91   1        vI2CDelai(dDelai);  
  92   1      }
  93          
  94          
  95          //**********************************************************************
  96          void vI2CStopBit(void)
  97          //  Auteur : Alain Champagne    
  98          //       Date de création : 30-05-2007              
  99          //  Description :   Routine de clôture d'une communication série
 100          //      I2C. Doit être appelée à la fin de toutes 
 101          //      opérations.
 102          //
 103          //  Paramètres d'entrée :   Aucun   
 104          //  Paramètres de sortie :  Aucun   
 105          //  Variables utilisées :   Aucune
 106          //            
 107          //**********************************************************************
 108          {
 109   1        //Passage de 0 à 1 sur la ligne SDA durant
 110   1        //un niveau 1 sur la ligne SCL initie un 
 111   1        //STOP BIT.
 112   1        SDA = 0;            // Donnée à zéro et
 113   1        SCL = 0;            // clock aussi.
 114   1        vI2CDelai (dDelai); // Légère attente.
 115   1        SCL = 1;            // SCL à 1.
 116   1        vI2CDelai (dDelai); // Légère attente.
 117   1        SDA = 1;            // SDA à 1.
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2019 21:50:55 PAGE 3   

 118   1        vI2CDelai (dDelai); // Légère attente.  
 119   1      }
 120          
 121          
 122          
 123          //**********************************************************************
 124          void vEcrire1BitI2C(unsigned char ucBitOut)
 125          //  Auteur : Alain Champagne    
 126          //      Date de création : 30-05-2007             
 127          //  Description :   Routine d'émission d'un bit de communication 
 128          //      I2C.  La routine prend le bit de la variable
 129          //      vBitOut et ajuste la ligne SDA en fonction de cette 
 130          //       variable. Les lignes SDA et SCL sont activée à tour
 131          //       de rôle pour communiquer l'information 
 132          //       du maître à l'esclave.
 133          //              
 134          //  Fonctions appelées :  Aucune    
 135          //  Paramètres d'entrée :   La valeur du bit à envoyer    
 136          //  Paramètres de sortie :  Aucun   
 137          //  Variables utilisées :   ucBitVar
 138          //  Equate :    Aucun 
 139          //  #Define :     SDA, SCL  
 140          //            
 141          //**********************************************************************
 142          {
 143   1        SCL = 0;
 144   1        
 145   1        // On assume le bit à 0.
 146   1        if (ucBitOut==0xFF) // Vérifier et ajuster l'état du bit à sortir.
 147   1          SDA = 1;
 148   1        else
 149   1          SDA = 0;  
 150   1        vI2CDelai(dDelai);  // Légère attente.
 151   1        SCL = 1;            // Aller activer la ligne SCL.
 152   1        vI2CDelai(dDelai);  // Légère attente.
 153   1        SCL = 0;            // On replace la ligne SCL à 0.
 154   1        vI2CDelai(dDelai);  // Légère attente.
 155   1      }
 156          
 157          
 158          
 159          
 160          //**********************************************************************
 161          unsigned char ucLire1BitI2C(void)
 162          //  Auteur : Alain Champagne    
 163          //      Date de création : 30-05-2006             
 164          //  Description :   Routine de réception d'un bit de communication 
 165          //      I2C.  La routine prend le bit de la ligne SDA
 166          //      après avoir activé la ligne SCL. Le bit de 
 167          //      donnée est placé temporairement dans une va-
 168          //      riable ucBitIn et sera réutilisé dans 
 169          //      une routine de traitement d'octets.
 170          //              
 171          //  Fonctions appelées :    Aucune    
 172          //  Paramètres d'entrée :   Aucun   
 173          //  Paramètres de sortie :  Retourne la valeur du bit lu  
 174          //
 175          //**********************************************************************
 176          {
 177   1      unsigned char ucBitIn;
 178   1        ucBitIn = 0xFF;       // On assume le bit à lire à 1.
 179   1        SDA = 1;              // La ligne SDA est en entrée.
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2019 21:50:55 PAGE 4   

 180   1        vI2CDelai(dDelai);    // Légère attente.
 181   1        SCL = 1;              // On lève la ligne SCL.
 182   1        vI2CDelai(dDelai);    // Légère attente.
 183   1        if (!SDA)             // Vérifier et ajuster le bit de donnée.
 184   1          ucBitIn = 0x00;
 185   1        SCL = 0;              // On replace la ligne SCL à 0.
 186   1        vI2CDelai(dDelai);    // Légère attente.
 187   1        return (ucBitIn);     // Retourner l'état du bit.
 188   1      }
 189          
 190          
 191          
 192          // *************************************************************************************************
 193          unsigned char vEcrire8BitsI2C (unsigned char ucTxData)
 194          //  Auteur: Alain Champagne 
 195          //  Date de création :  30-05-2007
 196          //  
 197          //  Modification:   Ajout du ACK.
 198          //  30-07-2019  Ajout du retour du ACK
 199          //
 200          //  Description: Routine de réception de 8 bits de données en I2C.
 201          //  Paramètres d'entrées : Octet que l'on veut envoyer
 202          //  Paramètres de sortie : État du ack venant du slave
 203          //  Notes                : Aucune
 204          //
 205          // *************************************************************************************************
 206          {
 207   1        int i;
 208   1        unsigned char ucI2C, ucI2CBit;
 209   1        for (i=0; i<8; i++)         
 210   1        {
 211   2          ucI2CBit = 0x00;          
 212   2          ucI2C = ucTxData & 0x80;
 213   2          if (ucI2C == 0x80)        
 214   2          {
 215   3            ucI2CBit = 0xFF;        
 216   3          }
 217   2          vEcrire1BitI2C(ucI2CBit); 
 218   2          vI2CDelai(dDelai);        
 219   2          ucTxData = ucTxData << 1; 
 220   2        }  
 221   1        return(ucLire1BitI2C());        
 222   1      }
 223          
 224          
 225          //**********************************************************************
 226          unsigned char ucLire8BitsI2C (unsigned char ucAckValue)
 227          //  Auteur : Alain Champagne    
 228          //      Date de création : 30-05-2001             
 229          //  Description :   Routine de réception de 8 bits de donnée 
 230          //      provenant d'une communication I2C.
 231          //
 232          //  Modification - Stéphane Deschênes   
 233          //  30-07-2019  Ajout de la valeur du ACK en paramètre
 234          //
 235          //  Paramètres d'entrée :   Valeur du ack voulu.    
 236          //  Paramètres de sortie :  ucRxData.   
 237          //  Variables utilisées :   ucI2C, i.
 238          //  Variable globale :      Aucune.
 239          //  Equate :    Aucun 
 240          //  #Define :     Aucun 
 241          //            
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2019 21:50:55 PAGE 5   

 242          //**********************************************************************
 243          {
 244   1        unsigned char ucRxData, ucI2C;
 245   1        int i;
 246   1        ucRxData = 0x00;            // Remise à zéro de la variable d'entrée.
 247   1        for (i=0; i<8; i++)         // Faire 8 fois pour un octet.
 248   1        {
 249   2          ucRxData = ucRxData << 1; // Décaler la donnée reçue.
 250   2          ucI2C = ucLire1BitI2C();  // Appel de la fonction de lecture d'un bit.
 251   2          vI2CDelai(dDelai);        // Légère attente.
 252   2          if (ucI2C==0xFF)          // Traitement et ajustement de la variable.
 253   2          ucRxData = ucRxData | 0x01;  
 254   2        } 
 255   1        vEcrire1BitI2C(ucAckValue);     // Envoyer la valeur du ack à la fin
 256   1        return (ucRxData);          // Retour de la variable.
 257   1      }
 258          
 259          
 260          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
